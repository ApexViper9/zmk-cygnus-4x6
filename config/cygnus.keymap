#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bluetooth {
            bindings = <&mo 3>;
            key-positions = <37 41>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2            &kp N3           &kp N4               &kp N5             &kp N6     &kp N7                &kp N8            &kp N9            &kp N0            &kp BSPC
&kp TAB     &kp Q   &kp W             &kp E            &kp R                &kp T              &kp Y      &kp U                 &kp I             &kp O             &kp P             &kp ENTER
&kp LCTRL   &kp A   &hml RIGHT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F    &kp G              &kp H      &hmr RIGHT_SHIFT J    &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &kp SEMI          &kp SQT
&kp LSHFT   &kp Z   &kp X             &kp C            &hml LEFT_CONTROL V  &kp B              &kp N      &hmr RIGHT_CONTROL M  &kp COMMA         &kp DOT           &kp SINGLE_QUOTE  &kp RIGHT_SHIFT
                                      &lt 3 ESC        &lt 2 TAB            &lt 1 BACKSPACE    &kp SPACE  &lt 2 DEL             &lt 3 ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | BKSP |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6     &kp F7                          &kp F8                     &kp F9                   &kp F10          &trans
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &trans     &trans                          &trans                     &trans                   &trans           &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans     &hmr RIGHT_SHIFT RIGHT_BRACKET  &hmr RIGHT_GUI LEFT_BRACE  &hmr RIGHT_ALT UP_ARROW  &kp BSLH         &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp SLASH  &kp MINUS                       &kp LEFT_ARROW             &kp DOWN_ARROW           &kp RIGHT_ARROW  &trans
                                        &kp LGUI      &trans        &kp SPACE       &trans     &trans                          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp BSPC
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans  &trans        &trans  &trans  &trans
            >;
        };
    };
};
